name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn tsc:full

      - name: Build
        run: yarn build:all

      - name: Test
        run: yarn test --coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3

  build-test-matrix:
    name: Build & Test Matrix
    runs-on: ubuntu-latest
    outputs:
      changed-plugins: ${{ steps.changed-plugins.outputs.changed }}
      has-changes: ${{ steps.changed-plugins.outputs.has-changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get changed plugins
        id: changed-plugins
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
          fi

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA...HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Extract plugin directories that have changes
          CHANGED_PLUGINS=$(echo "$CHANGED_FILES" | grep "^workspaces/" | cut -d'/' -f2 | sort -u)

          if [ -z "$CHANGED_PLUGINS" ]; then
            echo "changed=[]" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No plugin changes detected"
          else
            CHANGED_PLUGINS_JSON=$(echo "$CHANGED_PLUGINS" | jq -R . | jq -s .)
            echo "changed=$CHANGED_PLUGINS_JSON" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changed plugins: $CHANGED_PLUGINS"
          fi

  plugin-tests:
    name: Test Plugin
    runs-on: ubuntu-latest
    needs: build-test-matrix
    if: needs.build-test-matrix.outputs.has-changes == 'true'
    strategy:
      fail-fast: false
      matrix:
        plugin: ${{ fromJson(needs.build-test-matrix.outputs.changed-plugins) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build plugin
        run: yarn workspace ${{ matrix.plugin }} build

      - name: Test plugin
        run: yarn workspace ${{ matrix.plugin }} test

      - name: Lint plugin
        run: yarn workspace ${{ matrix.plugin }} lint
